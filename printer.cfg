# This file contains common pin mappings for the 2018 Creality
# Ender 3. To use this config, the firmware should be compiled for the
# AVR atmega1284p.

# Note, a number of Melzi boards are shipped with a bootloader that
# requires the following command to flash the board:
#  avrdude -p atmega1284p -c arduino -b 57600 -P /dev/ttyUSB0 -U out/klipper.elf.hex
# If the above command does not work and "make flash" does not work
# then one may need to flash a bootloader to the board - see the
# Klipper docs/Bootloaders.md file for more information.

# See the example.cfg file for a description of available parameters.

[tmc2130 stepper_x]
cs_pin: ar59
microsteps: 16
interpolate: False
run_current: 0.7
hold_current: 0.5
driver_IHOLDDELAY: 8 
driver_TPOWERDOWN: 30 
driver_TBL: 1 
driver_PWM_GRAD: 10
driver_HEND: 3
driver_HSTRT: 6
driver_TOFF: 2
driver_PWM_FREQ: 2
stealthchop_threshold: 50000
diag1_pin: ^!ar3

[tmc2130 stepper_y]
cs_pin: ar63
microsteps: 16
interpolate: False
run_current: 0.7
hold_current: 0.5
driver_IHOLDDELAY: 8 
driver_TPOWERDOWN: 30 
driver_TBL: 1 
driver_PWM_GRAD: 10
driver_HEND: 3
driver_HSTRT: 6
driver_TOFF: 2
driver_PWM_FREQ: 2
stealthchop_threshold: 50000
diag1_pin: ^!ar14

[tmc2130 stepper_z]
cs_pin: ar40
microsteps: 16
interpolate: False
run_current: 0.700
hold_current: 0.5
driver_IHOLDDELAY: 8 
driver_TPOWERDOWN: 30 
driver_TBL: 2 
driver_PWM_GRAD: 10
driver_HEND: 3
driver_HSTRT: 6
driver_TOFF: 3
driver_PWM_FREQ: 2
stealthchop_threshold: 50000

[tmc2130 extruder]
cs_pin: ar42
microsteps: 32
interpolate: False
run_current: 0.8
hold_current: 0.8
driver_IHOLDDELAY: 8 
driver_TPOWERDOWN: 30 
driver_TBL: 1 
driver_PWM_GRAD: 15
driver_HEND: 3
driver_HSTRT: 6
driver_TOFF: 2
driver_PWM_FREQ: 2
stealthchop_threshold: 50000

[stepper_x]
step_pin: ar60
dir_pin: !ar61
enable_pin: !ar56
step_distance: .0125
# endstop_pin: tmc2130_stepper_x:virtual_endstop
endstop_pin: ^ar3
position_endstop: -1.5
position_min: -1.5
position_max: 254
homing_speed: 25
second_homing_speed: 5

[stepper_y]
step_pin: ar46
dir_pin: !ar48
enable_pin: !ar62
step_distance: .0125
# endstop_pin: tmc2130_stepper_y:virtual_endstop
endstop_pin: ^ar14
position_endstop: -13
position_min: -13
position_max: 232
homing_speed: 50
second_homing_speed: 5

[stepper_z]
step_pin: ar26
dir_pin: ar28
enable_pin: !ar24
step_distance: .00250
endstop_pin: probe:z_virtual_endstop
position_endstop: 0.0
position_min: 0
position_max: 180
homing_speed: 25
second_homing_speed: 5

[extruder]
max_extrude_only_distance: 500.0
step_pin: ar36
dir_pin: !ar34
enable_pin: !ar30
step_distance: 0.00361751451
# Measure 120mm, then extrude 100mm
# G1 E100 F200
# step_distance = old_e_steps * ((120 - distance_to_mark) / 100)
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: ar10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog13
min_temp: 0
max_temp: 280
pressure_advance: 0.080
# pressure_advance_smooth_time: 0.040
control = pid
pid_kp = 20
pid_ki = 1
pid_kd = 60


[heater_bed]
heater_pin: ar8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: analog14
min_temp: 0
max_temp: 130

[fan]
pin: ar9

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0
pin_map: arduino

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_accel_to_decel: 1500
max_z_velocity: 20
max_z_accel: 100
square_corner_velocity: 5

[input_shaper]
shaper_freq_x: 48
shaper_freq_y: 48
shaper_type: mzv

[display]
lcd_type: st7920
cs_pin: ar27
sclk_pin: ar25
sid_pin: ar29
encoder_pins: ^ar23, ^ar17
click_pin: ^!ar35

[bed_screws]
screw1: 32.5,32.5
screw2: 202.5,32.5
screw3: 32.5,202.5
screw4: 202.5,32.5

[bltouch]
sensor_pin: ^ar18
control_pin: ar4
z_offset: 2.15 # lower value gives first layer more room
x_offset: -38
y_offset: -3 
pin_up_touch_mode_reports_triggered: False

#   Set if the BLTouch consistently reports the probe in a "not
#   triggered" state after a successful "pin_up" command. This should
#   be True for a genuine BLTouch; some BLTouch clones may require
#   False.  The default is True.
# pin_up_touch_mode_reports_triggered: False
#   Set if the BLTouch consistently reports a "triggered" state after
#   the commands "pin_up" followed by "touch_mode". This should be
#   True for a genuine BLTouch; some BLTouch clones may require
#   False. The default is True.

[homing_override]
set_position_z: 0.0
gcode:
   G90 ; Use absolute position mode
   G1 Z10 ; Move up 10mm
   G28 X Y
   G1 X167.5 Y133.5 F6000 ; XY center of bed for probe
   G28 Z

[gcode_macro HOME_MESH]
gcode:
   G28o
   BED_MESH_CALIBRATE
   BED_MESH_PROFILE SAVE=ender3

[bed_mesh]
speed: 120
#   The speed (in mm/s) of non-probing moves during the
#   calibration. The default is 50.
#horizontal_move_z: 5
#   The height (in mm) that the head should be commanded to move to
#   just prior to starting a probe operation. The default is 5.
#samples: 1
#   The number of times to probe each point.  The probed z-values
#   will be averaged.  The default is to probe 1 time.
#samples_result: average
#   One can choose median or average between probes samples
#   The default is average.
#sample_retract_dist: 2.0
#   The distance (in mm) to retract between each sample if
#   sampling more than once.  Default is 2mm.
mesh_min: 33,33
#   Defines the minimum x,y position to probe when for rectangular
#   beds. Note that this refers to the nozzle position, take care that
#   you do not define a point that will move the probe off of the bed.
#   This parameter must be provided for rectangular beds.
mesh_max: 202,202
#   Defines the maximum x,y position to probe when for rectangular
#   beds. Follow the same precautions as listed in min_point. Also note
#   that this does not necessarily define the last point probed, only
#   the maximum coordinate. This parameter must be provided.
probe_count: 7,7
#   For rectangular beds, this is a comma separate pair of integer
#   values (X,Y) defining the number of points to probe along each axis.
#   A single value is also valid, in which case that value will be applied
#   to both axes.  Default is 3,3.
#round_probe_count: 5
#   For round beds, this is integer value defines the maximum number of
#   points to probe along each axis. This value must be an odd number.
#   Default is 5.
#fade_start: 1.0
#   The gcode z position in which to start phasing out z-adjustment
#   when fade is enabled.  Default is 1.0.
#fade_end: 0.0
#   The gcode z position in which phasing out completes.  When set
#   to a value below fade_start, fade is disabled. It should be
#   noted that fade may add unwanted scaling along the z-axis of a
#   print.  If a user wishes to enable fade, a value of 10.0 is
#   recommended. Default is 0.0, which disables fade.
#fade_target:
#   The z position in which fade should converge. When this value is set
#   to a non-zero value it must be within the range of z-values in the mesh.
#   Users that wish to converge to the z homing position should set this to 0.
#   Default is the average z value of the mesh.
#split_delta_z: .025
#   The amount of Z difference (in mm) along a move that will
#   trigger a split. Default is .025.
#move_check_distance: 5.0
#   The distance (in mm) along a move to check for split_delta_z.
#   This is also the minimum length that a move can be split. Default
#   is 5.0.
mesh_pps: 2,2
#   A comma separated pair of integers (X,Y) defining the number of
#   points per segment to interpolate in the mesh along each axis. A
#   "segment" can be defined as the space between each probed
#   point. The user may enter a single value which will be applied
#   to both axes.  Default is 2,2.
algorithm: bicubic
#   The interpolation algorithm to use. May be either "lagrange"
#   or "bicubic". This option will not affect 3x3 grids, which
#   are forced to use lagrange sampling.  Default is lagrange.
bicubic_tension: 0.2
#   When using the bicubic algorithm the tension parameter above
#   may be applied to change the amount of slope interpolated.
#   Larger numbers will increase the amount of slope, which
#   results in more curvature in the mesh. Default is .2.
#relative_reference_index: 
#   A point index in the mesh to reference all z values to. Enabling
#   this parameter produces a mesh relative to the probed z position
#   at the provided index.

[screws_tilt_adjust]
screw1: 70.5,35.5
screw2: 240.5,35.5
screw3: 240.5,205.5
screw4: 70.5,205.5
screw1_name: front left screw
screw2_name: front right screw
screw3_name: rear right screw
screw4_name: read left screw
horizontal_move_z: 10.
speed: 50.
screw_thread: CW-M3

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 30
#*# pid_ki = 1.8
#*# pid_kd = 200
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 73.517
#*# pid_ki = 1.892
#*# pid_kd = 350
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.073750, 0.035000, 0.051250, 0.053750, 0.080000, 0.043750, 0.078750
#*# 	0.008750, -0.013750, 0.013750, 0.023750, 0.063750, 0.025000, 0.062500
#*# 	-0.022500, -0.041250, -0.017500, -0.011250, 0.027500, -0.010000, 0.032500
#*# 	-0.027500, 0.016250, -0.007500, -0.006250, 0.021250, -0.027500, 0.016250
#*# 	-0.051250, -0.015000, -0.021250, -0.012500, 0.012500, -0.026250, 0.026250
#*# 	0.027500, 0.018750, 0.015000, 0.030000, 0.033750, -0.026250, 0.007500
#*# 	0.078750, 0.071250, 0.067500, 0.068750, 0.078750, 0.020000, 0.060000
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 33.0
#*# max_x = 201.96
#*# min_y = 33.0
#*# max_y = 201.96
#*#
#*# [bed_mesh ender3]
#*# version = 1
#*# points =
#*# 	0.073750, 0.035000, 0.051250, 0.053750, 0.080000, 0.043750, 0.078750
#*# 	0.008750, -0.013750, 0.013750, 0.023750, 0.063750, 0.025000, 0.062500
#*# 	-0.022500, -0.041250, -0.017500, -0.011250, 0.027500, -0.010000, 0.032500
#*# 	-0.027500, 0.016250, -0.007500, -0.006250, 0.021250, -0.027500, 0.016250
#*# 	-0.051250, -0.015000, -0.021250, -0.012500, 0.012500, -0.026250, 0.026250
#*# 	0.027500, 0.018750, 0.015000, 0.030000, 0.033750, -0.026250, 0.007500
#*# 	0.078750, 0.071250, 0.067500, 0.068750, 0.078750, 0.020000, 0.060000
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 33.0
#*# max_x = 201.96
#*# min_y = 33.0
#*# max_y = 201.96
